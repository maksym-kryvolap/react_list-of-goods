{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","reset","sortAlphabet","setState","buttonLength","document","querySelector","classList","add","buttonAlpabet","remove","sortLength","buttonAlphabet","buttonSucc","reverse","forceUpdate","querySelectorAll","forEach","element","this","visibleGoods","goods","sort","a","b","localeCompare","length","console","log","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,EACVC,OAAO,GAJX,EAOEC,aAAe,WACb,EAAKC,SAAS,CAAEH,SAAU,EAAGC,OAAO,IACpC,IAAMG,EAAeC,SAASC,cAAc,eAEhC,OAAZF,QAAY,IAAZA,KAAcG,UAAUC,IAAI,YAE5B,IAAMC,EAAgBJ,SAASC,cAAc,YAEhC,OAAbG,QAAa,IAAbA,KAAeF,UAAUG,OAAO,aAfpC,EAkBEC,WAAa,WACX,EAAKR,SAAS,CAAEH,SAAU,EAAGC,OAAO,IAEpC,IAAMW,EAAiBP,SAASC,cAAc,YAEhC,OAAdM,QAAc,IAAdA,KAAgBL,UAAUC,IAAI,YAC9B,IAAMK,EAAaR,SAASC,cAAc,eAEhC,OAAVO,QAAU,IAAVA,KAAYN,UAAUG,OAAO,aA1BjC,EA6BEI,QAAU,WACR,EAAKX,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,WACnBE,OAAO,MAET,EAAKc,cAEL,IAAMN,EAAgBJ,SAASC,cAAc,eAExC,EAAKR,MAAMC,WAGD,OAAbU,QAAa,IAAbA,KAAeF,UAAUC,IAAI,YAFhB,OAAbC,QAAa,IAAbA,KAAeF,UAAUG,OAAO,aAvCtC,EA6CET,MAAQ,WACN,EAAKE,SAAS,CAAEH,SAAU,EAAGC,OAAO,IACpBI,SAASW,iBAAiB,WAElCC,SAAQ,SAAAC,GACdA,EAAQX,UAAUC,IAAI,gBAlD5B,4CAsDE,WACE,IAAQP,EAAUkB,KAAKrB,MAAfG,MAEJmB,EA1FD,SACLC,EADK,GAGJ,IADCrB,EACF,EADEA,SAAUD,EACZ,EADYA,WAENqB,EAAY,YAAOC,GAEzB,OAAQrB,GACN,KAAK,EACHoB,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAK,EACHJ,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAa7C,OAPI3B,GACFqB,EAAaN,UAIfa,QAAQC,IAAI5B,EAAUD,GAEfqB,EAkEcS,CAAkBjC,EAAiBuB,KAAKrB,OAM3D,OAJKG,IACHmB,EAAY,UAAOxB,IAInB,sBAAKkC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAASb,KAAKjB,aAHhB,iCAQA,wBACE6B,KAAK,SACLD,UAAU,6BACVE,QAASb,KAAKR,WAHhB,4BAQA,wBACEoB,KAAK,SACLD,UAAU,6BACVE,QAASb,KAAKL,QAHhB,qBAQCK,KAAKrB,MAAMG,OACV,wBACE8B,KAAK,SACLD,UAAU,4BACVE,QAASb,KAAKlB,MAHhB,sBAUJ,6BACE,6BACGmB,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAxGtC,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAjC,SAASkC,eAAe,W","file":"static/js/main.a0958f5f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 1:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case 2:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  reset: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n    reset: false,\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: 1, reset: true });\n    const buttonLength = document.querySelector('.is-success');\n\n    buttonLength?.classList.add('is-light');\n\n    const buttonAlpabet = document.querySelector('.is-info');\n\n    buttonAlpabet?.classList.remove('is-light');\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: 2, reset: true });\n\n    const buttonAlphabet = document.querySelector('.is-info');\n\n    buttonAlphabet?.classList.add('is-light');\n    const buttonSucc = document.querySelector('.is-success');\n\n    buttonSucc?.classList.remove('is-light');\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      reset: true,\n    }));\n    this.forceUpdate();\n\n    const buttonAlpabet = document.querySelector('.is-warning');\n\n    if (!this.state.isReversed) {\n      buttonAlpabet?.classList.remove('is-light');\n    } else {\n      buttonAlpabet?.classList.add('is-light');\n    }\n  };\n\n  reset = () => {\n    this.setState({ sortType: 2, reset: false });\n    const buttons = document.querySelectorAll('.button');\n\n    buttons.forEach(element => {\n      element.classList.add('is-light');\n    });\n  };\n\n  render() {\n    const { reset } = this.state;\n\n    let visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    if (!reset) {\n      visibleGoods = [...goodsFromServer];\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {this.state.reset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}