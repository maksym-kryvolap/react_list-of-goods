{"version":3,"sources":["App.tsx","Components/Good.tsx","index.tsx"],"names":["SortType","Good","good","goodsFromServer","App","state","isReversed","sortType","NONE","reset","sortAlphabet","setState","ALPHABET","sortLength","LENGTH","reverse","this","visibleGoods","goods","sort","a","b","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtC,OACE,oBAAI,UAAQ,OAAZ,SACGA,KDHMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGH,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAMI,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUP,EAASQ,KACnBC,OAAO,GAJX,EAOEC,aAAe,WACb,EAAKC,SAAS,CAAEJ,SAAUP,EAASY,SAAUH,OAAO,KARxD,EAWEI,WAAa,WACX,EAAKF,SAAS,CAAEJ,SAAUP,EAASc,OAAQL,OAAO,KAZtD,EAeEM,QAAU,WACR,EAAKJ,UAAS,SAAAN,GAAK,MAAK,CACtBC,YAAaD,EAAMC,WACnBG,OAAO,OAlBb,EAsBEA,MAAQ,WACN,EAAKE,SAAS,CACZL,YAAY,EACZC,SAAUP,EAASQ,KACnBC,OAAO,KA1Bb,4CA8BE,WACE,MAAwCO,KAAKX,MAArCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAAUE,EAA9B,EAA8BA,MAExBQ,EA/DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAEzB,OAAQX,GACN,KAAKP,EAASY,SACZK,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKrB,EAASc,OACZG,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAU7C,OAJIjB,GACFW,EAAaF,UAGRE,EA0CgBO,CAAkBrB,EAAiBa,KAAKX,OAE7D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaP,EAASY,WAEtCgB,QAASZ,KAAKN,aANhB,iCAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaP,EAASc,SAEtCc,QAASZ,KAAKH,WANhB,4BAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAASZ,KAAKD,QANhB,qBAWCN,GACC,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKP,MAHhB,sBAUJ,6BACE,6BACGQ,EAAaY,KAAI,SAAA3B,GAAI,OACpB,cAAC,EAAD,CAAMA,KAAMA,GAAWA,iBArFrC,GAAyB4B,IAAMC,WEzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.632fe627.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Good } from './Components/Good';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  reset: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n    reset: false,\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET, reset: true });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH, reset: true });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      reset: true,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n      reset: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType, reset } = this.state;\n\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {reset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <Good good={good} key={good} />\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  good: string,\n};\n\nexport const Good: React.FC<Props> = ({ good }) => {\n  return (\n    <li data-cy=\"Good\">\n      {good}\n    </li>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}